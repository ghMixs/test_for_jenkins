#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent any
    stages {
        stage('Build Docker'){
            steps {
                script {
                    def inspectExitCode = sh script: "docker build -t tmp_nginx .", returnStatus: true
                    if (inspectExitCode == 0)
                    {
                        echo "Build succes"   
                    }
                    else {
                        error "Build failed..."
                    }
                }
                   
                    
                 
            }
        }
        
        stage('Stop Service and Rename Docker'){
            steps {
                script {
                    def stop_service = sh script: "docker stop web", returnStatus: true
                    if (stop_service == 0)
                    {
                        sh 'docker rm web'
                    }
                    
                    def remove_container =  sh script: "docker image rm img_nginx", returnStatus: true
                    sh 'docker image tag tmp_nginx img_nginx'
                }
            }
        }
        
        
        stage('Start docker') {
            steps {
                script {
                    sh 'docker run -p 10.8.0.1:80:80 --name web -d img_nginx'
                }
            }
        }
    }
}


